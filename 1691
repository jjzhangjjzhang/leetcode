class Solution {
public:
    int maxHeight(vector<vector<int>>& cuboids) {
        vector<vector<int>> abc;
     int n=cuboids.size();

        for(auto x: cuboids) {
            sort(x.begin(), x.end());
            abc.push_back(x);
        }
        cuboids=abc;
        sort(cuboids.begin(), cuboids.end(), comp);
        vector<int> dp(n, 0);
        dp[0]=cuboids[0][2];
        int res=dp[0];
        for(int i=1; i<n; i++) {
            dp[i]=cuboids[i][2];
            for(int j=0;j<i; j++) {
                if(cuboids[j][0]>=cuboids[i][0] &&cuboids[j][1]>=cuboids[i][1] && cuboids[j][2]>=cuboids[i][2]) {
                    dp[i]=max(dp[i], dp[j]+cuboids[i][2]);
                }
            }
            res=max(res, dp[i]);
        }
        return res;
    }
    bool static comp(vector<int> a, vector<int> b) {
        return a[2]>b[2] || (a[2]==b[2] && (a[1]>b[1] || (a[1]==b[1] && a[0]>b[0])));
    }
};
